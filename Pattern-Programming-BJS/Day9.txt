1 1 1 1 2
3 2 2 2 2
3 3 3 3 4
5 4 4 4 4
5 5 5 5 6
<==========>

*
i   i=1    <=n   5 rows 5 cols
    j=1    <n

 1 1 1 1
 2 2 2 2 
 3 3 3 3 
 4 4 4 4
 5 5 5 5
<===========>

  for(i)
   {
   if(i%2==0)
    print i+1;
    for(j)
    {
      print i;
    }
    if(i%2!=0)
    print i+1;

    
    nextLine
  }

 1 1 1 1 2
 3 2 2 2 2 
 3 3 3 3 4
 5 4 4 4 4
 5 5 5 5 6

<===========>

n=5;
5	4	3	2	1
10	9	8	7	6
15	14	13	12	11
20	19	18	17	16
25	24	23	22	21







LOGIC A
-=====
class NumberPattern 
{
	public static void main(String[] args) 
	{
		int n=5;
		
		for (int i=1;i<=n ;i++ )
		{
			int k=n*i;
			for (int j=1;j<=n ;j++ )
			{ 
				System.out.print(k+" ");
				k--;
			}
			System.out.println();

		}
	}
}






logic B
=====
class NumberPattern 
{
	public static void main(String[] args) 
	{
		int n=5;
		int k=n;
		int k1=k;
		for (int i=1;i<=n ;i++ )
		{

			for (int j=1;j<=n ;j++ )
			{ 
				System.out.print(k+" ");
				k--;
			}
			System.out.println();
			k=k1+n;
			k1=k;

		}
	}
}



==================================================================================

1
2 3
4 5 6
7 8 9 10
11 12 13 14 15

i>=j 

class NumberPattern 
{
	public static void main(String[] args) 
	{
		int n=5;
		int k=1;
		for (int i=1;i<=n ;i++ )
		{
			for (int j=1;j<=n ;j++ )
			{ 
				if(i>=j)
				System.out.print(k++ +" ");
			}
			System.out.println();
		}
	}
}




1 2 3 4 5
6 7 8 9
10 11 12
13 14 
15

================================>

1
3 2 
6 5 4
10 9 8 7 
15 14 13 12 11




1 3 6 10 15.........==>triangular series

(1*2)/2=1 ==========> (i*(i+1))/2


(2*3)/2=3


(3*4)/2=6


(4*5)/2=10



(5*6)/2=15




class NumberPattern 
{
	public static void main(String[] args) 
	{
		int n=5;
		
		for (int i=1;i<=n ;i++ )
		{
			int k=(i*(i+1))/2;//3 2
			for (int j=1;j<=n ;j++ )
			{ 
				if(i>=j)
				System.out.print(k-- +" ");
			}
			System.out.println();
		}
	}
}

====================================================
1
3 4
6 7 8
10 11 12 13
15 16 17 18 19
class NumberPattern 
{
	public static void main(String[] args) 
	{
		int n=5;
		
		for (int i=1;i<=n ;i++ )
		{
			int k=(i*(i+1))/2;//3 2
			for (int j=1;j<=n ;j++ )
			{ 
				if(i>=j)
				System.out.print(k++ +" ");
			}
			System.out.println();
		}
	}
}








==============================================================


ASSIGNMENT
=============================================================

1                                 
3 2                          --dec
4 5 6                        ++inc
10 9 8 7                     --dec
11 12 13 14 15               ++inc



1
11
101
1001
11111
====================================================================

INTERVIEW QUESTIONS
=============================================================
1) WAP to find factors of a given number
n=10

1<=n
10%i==0
i




Solution:
class NumberPattern 
{
	public static void main(String[] args) 
	{
		int n=10;
		System.out.println("The factors of "+n);
		for (int i=1;i<=n ;i++ )
		{
			if(n%i==0)
			{
				System.out.println(i);
			}
			
		}
	}
}

2) WAP to count factors of a given number
class NumberPattern 
{
	public static void main(String[] args) 
	{
		int n=10;
		int count=0;
		System.out.println("The factors of "+n);
		for (int i=1;i<=n ;i++ )
		{
			if(n%i==0)
			{
				System.out.println(i);
				count++;
			}
		}
		System.out.println("total count of  "+n+" : "+count);
	}
}





System.out.println(1+1+1+1);//4
System.out.println(1+1+1+"1");//31
System.out.println(1+1+"1"+1);//211
System.out.println(1+"1"+1+1);//1111
System.out.println("1"+1+1+1);//1111
System.out.println("1"+"1"+1+1);//1111




























































































































































































